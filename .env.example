# Supabase Configuration
VITE_SUPABASE_URL=your_supabase_project_url
VITE_SUPABASE_ANON_KEY=your_supabase_anon_key

#############################################################
# Google OAuth Configuration (handled in Supabase dashboard) #
#############################################################
# You normally DO NOT need to expose Google Client Secret in the frontend.
# Steps:
# 1. Google Cloud Console: create project
# 2. Configure OAuth Consent Screen (External) and publish (Testing is fine initially)
# 3. Create OAuth 2.0 Web Client credentials -> copy Client ID & Client Secret
# 4. In Supabase: Authentication > Providers > Google -> Enable -> paste Client ID & Secret
# 5. Redirect URIs to add in Google console (must exactly match):
#    Local Dev:  http://127.0.0.1:54321/auth/v1/callback
#    Production: https://your-project.supabase.co/auth/v1/callback
# 6. Save provider in Supabase. The frontend then just calls signInWithOAuth({ provider: 'google' })
#
# Only include CLIENT ID here if you want to display it or do advanced flows; secret MUST stay server-side.
VITE_GOOGLE_CLIENT_ID=your_google_client_id_optional
# VITE_GOOGLE_CLIENT_SECRET=never_put_secret_here

# Optional: For local development
VITE_SUPABASE_LOCAL_URL=http://127.0.0.1:54321
VITE_SUPABASE_LOCAL_ANON_KEY=your_local_anon_key

# App Configuration
VITE_APP_NAME=AlumConnect
VITE_APP_URL=http://localhost:5173

# Analytics (Optional)
VITE_GOOGLE_ANALYTICS_ID=your_ga_id

# Social Media (Optional)
VITE_TWITTER_HANDLE=@alumconnect
VITE_LINKEDIN_URL=https://linkedin.com/company/alumconnect
VITE_GITHUB_URL=https://github.com/alumconnect